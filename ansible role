---
# tasks file for elastic-installer

# Install the elastic repos and base OS updates
- name: "{{ ansible_os_family }} Install"
  tags: [ 'ps::install' ]
  include: "{{ ansible_os_family }}.yml"
  when: ansible_os_family | default('') != ''

- name: Disable SELinux
  selinux:
    state: disabled
  register: sel

- name: reboot
  reboot:
  when: sel.changed

- name: download erlang
  yum:
   name: http://packages.erlang-solutions.com/erlang-solutions-1.0-1.noarch.rpm
   state: present

- name: import elasticsearch key
  rpm_key:
   key: https://artifacts.elastic.co/GPG-KEY-elasticsearch
   state: present

#XXX copy
- name: copying elastic repo
  get_url:
    url: https://raw.githubusercontent.com/perfsonar/archiving-sandbox/master/toolkit/files/elastic.repo
    dest: /etc/yum.repos.d/elastic.repo

- name: copying rabbitmq repo
  get_url:
    url: https://raw.githubusercontent.com/perfsonar/archiving-sandbox/master/central-archive/files/rabbit.repo
    dest: /etc/yum.repos.d/rabbit.repo

- name: yum clean all
  command: yum clean all
  args:
    warn: no

- name: install package
  yum:
    name:
      - gcc
      - kernel-devel
      - kernel-headers
      - dkms
      - make
      - bzip2
      - python3
      - python3-requests
      - elasticsearch
      - erlang
      - rabbitmq-server
      - java-11-openjdk
    state: present


- name: newer java for logstash
  get_url:
    url: https://raw.githubusercontent.com/perfsonar/archiving-sandbox/master/toolkit/files/java.sh
    dest: /etc/profile.d/java.sh

- name: execute script
  shell: source /etc/profile.d/java.sh

- name: java 11 setup
  shell: JAVA_HOME=/usr/lib/jvm/jre-11 yum install -y logstash

- name: copying
  copy:
    content: "JAVA_HOME=/usr/share/elasticsearch/jdk"
    dest: /etc/sysconfig/logstash

- name: reload daemon
  systemd:
    daemon_reexec: yes

- name: start rabbitmq
  systemd:
    enabled: yes
    name: rabbitmq-server
    state: started

- name: enable rabbitmq-management
  rabbitmq_plugin:
    names: rabbitmq_management
    state: enabled

- name: enable elastic
  systemd:
    enabled: yes
    name: elasticsearch.service
    state: started

- name: create dir
  file:
    path: /usr/lib/perfsonar/scripts
    state: directory
    mode: 0755

- name: load script
  get_url:
    url: https://raw.githubusercontent.com/perfsonar/archiving-sandbox/master/toolkit/scripts/pselastic_secure.sh
    dest: /usr/lib/perfsonar/scripts/pselastic_secure.sh
    mode: 0755

- name: copy andys stuff
  copy:
    src: pselastic_setup
    dest: /usr/lib/
    mode: 0755

- name: run secure script
  shell: /usr/lib/perfsonar/scripts/pselastic_secure.sh

#XXX add chmodes to .py files and the script itself

- name: add user
  rabbitmq_user:
    user: elastic
    password: elastic
    vhost: /
    configure_priv: .*
    read_priv: .*
    write_priv: .*
    state: present


- name: copy logstash
  copy:
    src: "{{item}}"
    dest: /etc/logstash/conf.d/
  with_fileglob:
    - logstash_pipeline/*

- name: more logstash
  get_url:
    url: https://raw.githubusercontent.com/perfsonar/archiving-sandbox/master/toolkit/files/99-outputs.conf
    dest: /etc/logstash/conf.d/99-outputs.conf
    force: yes

- name: create a link
  file:
    src: /etc/logstash/conf.d
    dest: /usr/share/logstash/pipeline
    state: link

- name: enable logstash
  systemd:
    enabled: yes
    name: logstash.service
    state: started

- name: get kibana key
  rpm_key:
   key: https://artifacts.elastic.co/GPG-KEY-elasticsearch
   state: present

- name: get kibana
  get_url:
    url: "https://artifacts.elastic.co/downloads/kibana/kibana-7.7.0-x86_64.rpm"
    dest: ~/ansible

- name: install kibana
  yum:
    name: kibana
    state: present

- name: reload daemon
  systemd:
    daemon_reload: yes

- name: start kibana
  systemd:
    enabled: yes
    name: kibana.service
    state: started

- name: setup kibana listening
  lineinfile:
    path: /etc/kibana/kibana.yml
    regexp: "^#server.host: "
    line: "server.host: \"0.0.0.0\""

- name: hostname
  slurp:
    src: /etc/perfsonar/elastic/auth_setup.out
  register: p

- name: Set Password
  set_fact:
    your_password: "{{ p['content'] | b64decode | regex_findall('elastic = (.*)')| first }}"
- name: input password
  lineinfile:
    path: /etc/kibana/kibana.yml
    regexp: '^#elasticsearch.password: '
    line: "elasticsearch.password: {{your_password}}"

- name: more formatting
  lineinfile:
    path: /etc/kibana/kibana.yml
    regexp: '^#elasticsearch.username: '
    line: "elasticsearch.username: \"kibana\""

- name: authencation off
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '^xpack.security.enabled: '
    line: "xpack.security.enabled: false"

- name: reload elasticsearch
  systemd:
    name: elasticsearch.service
    state: reloaded

- name: reload kibana
  systemd:
    name: kibana.service
    state: reloaded
